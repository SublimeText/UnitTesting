# NOTE: These params need to mirror exactly those of ci.ps1
[CmdletBinding()]
param(
    [Parameter(Mandatory = $false, Position = 0)]
    [string]$command,
    [Parameter(Mandatory = $false)]
    [switch] $coverage
)


# Scripts other than the bootstrapper are located here.
$global:UnitTestingPowerShellScriptsDirectory = $env:TEMP

if (!$env:UNITTESTING_BOOTSTRAPPED) {
    write-output "[UnitTesting] bootstrapping environment..."

    # UTF8 encoding without preamble.
    $local:utf8 = [System.Text.UTF8Encoding]::new($false)

    # Files encoded in base64 encoding. They need to be unpacked before they can be used.
    # !!! Every time they change, they need to be regenerated and copied here. !!!
$local:encodedDependencies = @(
'utils.ps1@@@CmZ1bmN0aW9uIGVuc3VyZUNyZWF0ZURpcmVjdG9yeSB7CiAgICBwYXJhbShbc3RyaW5n
XSRQYXRoKQogICAgW3ZvaWRdKG5ldy1pdGVtIC1pdGVtdHlwZSBkICIkUGF0aCIgLWZvcmNlIC1lcnJv
cmFjdGlvbiBzdG9wKQp9CgpmdW5jdGlvbiBlaXRoZXJPciB7CiAgICBwYXJhbSgkTGVmdCwgJFJpZ2h0
KQogICAgaWYgKCRMZWZ0KSB7ICRMZWZ0IH0gZWxzZSB7ICRSaWdodCB9Cn0KCmZ1bmN0aW9uIG51bGxP
ciB7CiAgICBwYXJhbSgkTGVmdCwgJFJpZ2h0KQogICAgaWYgKCRMZWZ0IC1lcSAkbnVsbCkgeyAkTGVm
dCB9IGVsc2UgeyAkUmlnaHQgfQp9CgpmdW5jdGlvbiB0b0xvZ01lc3NhZ2UgewogICAgcGFyYW0oW3N0
cmluZ10kY29udGVudCkKICAgICJbVW5pdFRlc3RpbmddICRjb250ZW50Igp9CgpmaWx0ZXIgbG9nVmVy
Ym9zZSB7CiAgICBwYXJhbShbc3RyaW5nXSRtZXNzYWdlKQogICAgd3JpdGUtdmVyYm9zZSAodG9Mb2dN
ZXNzYWdlIChlaXRoZXJPciAkXyAkbWVzc2FnZSkpCn0KCmZpbHRlciBsb2dXYXJuaW5nIHsKICAgIHBh
cmFtKFtzdHJpbmddJG1lc3NhZ2UpCiAgICB3cml0ZS13YXJuaW5nICh0b0xvZ01lc3NhZ2UgKGVpdGhl
ck9yICRfICRtZXNzYWdlKSkKfQoKZmlsdGVyIGxvZ0Vycm9yIHsKICAgIHBhcmFtKFtzdHJpbmddJG1l
c3NhZ2UpCiAgICB3cml0ZS1lcnJvciAodG9Mb2dNZXNzYWdlIChlaXRoZXJPciAkXyAkbWVzc2FnZSkp
Cn0KCmZ1bmN0aW9uIGVuc3VyZUNvcHlEaXJlY3RvcnlDb250ZW50cyB7CiAgICBwYXJhbShbc3RyaW5n
XSRQYXRoLCBbc3RyaW5nXSREZXN0aW5hdGlvbikKICAgIGNvcHktaXRlbSAiJFBhdGhcKiIgLXJlY3Vy
c2UgLWZvcmNlICREZXN0aW5hdGlvbiAtZXJyb3JhY3Rpb24gc3RvcAp9CgpmdW5jdGlvbiBlbnN1cmVS
ZW1vdmVEaXJlY3RvcnkgewogICAgcGFyYW0oW3N0cmluZ10kUGF0aCkKICAgIGlmIChbU3lzdGVtLklP
LlBhdGguRmlsZV0uRXhpc3RzKChjb252ZXJ0LXBhdGggJFBhdGgpKSkgewogICAgICAgIHRocm93ICJl
eHBlY3RlZCBhIGRpcmVjdG9yeSwgZ290IGEgZmlsZTogJFBhdGgiCiAgICB9CiAgICByZW1vdmUtaXRl
bSAiJFBhdGgiIC1yZWN1cnNlIC1mb3JjZSAtZXJyb3JhY3Rpb24gc3RvcAp9CgpmdW5jdGlvbiBnaXRG
ZXRjaExhdGVzdFRhZ0Zyb21SZXBvc2l0b3J5IHsKICAgIHBhcmFtKFtzdHJpbmddJFVybFRvUmVwb3Np
dG9yeSkKICAgIGdpdCBscy1yZW1vdGUgLS10YWdzICIkVXJsVG9SZXBvc2l0b3J5IiB8ICV7JF8gLXJl
cGxhY2UgIi4qLyguKikkIiwgJyQxJ30gYAogICAgICAgIHwgd2hlcmUtb2JqZWN0IHskXyAtbm90bWF0
Y2ggIlxeIn0gfCV7W1N5c3RlbS5WZXJzaW9uXSRffSBgCiAgICAgICAgfCBzb3J0IHwgc2VsZWN0LW9i
amVjdCAtbGFzdCAxIHwgJXsgIiRfIiB9Cn0KCmZ1bmN0aW9uIGdpdENsb25lVGFnIHsKICAgIHBhcmFt
KFtzdHJpbmddJFRhZywgW3N0cmluZ10kUmVwb3NpdG9yeVVybCwgW3N0cmluZ10kRGVzdGluYXRpb24p
CiAgICBnaXQgY2xvbmUgLS1xdWlldCAtLWRlcHRoIDEgLS1icmFuY2g9JFRhZyAkUmVwb3NpdG9yeVVy
bCAiJERlc3RpbmF0aW9uIiAyPiRudWxsCn0KCmZ1bmN0aW9uIGdpdEdldEhlYWRSZXZpc2lvbk5hbWUg
ewogICAgcGFyYW0oW3N0cmluZ10kUmVwb3NpdG9yeURpcmVjdG9yeSkKICAgIGdpdCAtQyAkUmVwb3Np
dG9yeURpcmVjdG9yeSByZXYtcGFyc2UgSEVBRAp9CgpmdW5jdGlvbiBnZXRMYXRlc3RVbml0VGVzdGlu
Z0J1aWxkVGFnIHsKICAgIHBhcmFtKFtzdHJpbmddJFRhZywgW3N0cmluZ10kU3VibGltZVRleHRWZXJz
aW9uLCBbc3RyaW5nXSRVcmxUb1VuaXRUZXN0aW5nKQogICAgJHJlc3VsdCA9ICRUYWcKICAgIGlmIChb
c3RyaW5nXTo6SXNOdWxsT3JFbXB0eSgkVGFnKSl7CiAgICAgICAgaWYgKCRTdWJsaW1lVGV4dFZlcnNp
b24gLWVxIDIpIHsKICAgICAgICAgICAgJHJlc3VsdCA9ICcwLjEwLjYnCiAgICAgICAgfSBlbHNlaWYg
KCRTdWJsaW1lVGV4dFZlcnNpb24gLWVxIDMpIHsKICAgICAgICAgICAgJHJlc3VsdCA9IGdpdEZldGNo
TGF0ZXN0VGFnRnJvbVJlcG9zaXRvcnkgJFVybFRvVW5pdFRlc3RpbmcKICAgICAgICB9CiAgICB9CiAg
ICAkcmVzdWx0Cn0KCmZ1bmN0aW9uIGdldFJlcG9zaXRvcnlUYWcgewogICAgcGFyYW0oW3N0cmluZ10k
UHJlZmVycmVkVGFnLCBbc3RyaW5nXSRSZXBvc2l0b3J5VXJsKQogICAgaWYgKFtzdHJpbmddOjpJc051
bGxPckVtcHR5KCRQcmVmZXJyZWRUYWcpKSB7IGdpdEZldGNoTGF0ZXN0VGFnRnJvbVJlcG9zaXRvcnkg
JFJlcG9zaXRvcnlVcmwgfQogICAgZWxzZSB7ICRQcmVmZXJyZWRUYWcgfQp9CgpmdW5jdGlvbiBjbG9u
ZVJlcG9zaXRvcnlUYWcgewogICAgcGFyYW0oW3N0cmluZ10kUHJlZmVycmVkVGFnLCBbc3RyaW5nXSRS
ZXBvc2l0b3J5VXJsLCBbc3RyaW5nXSREZXN0aW5hdGlvbikKICAgICRUYWcgPSBnZXRSZXBvc2l0b3J5
VGFnICRQcmVmZXJyZWRUYWcgJFJlcG9zaXRvcnlVcmwKICAgIGxvZ1ZlcmJvc2UgImNsb25pbmcgJChz
cGxpdC1wYXRoICRSZXBvc2l0b3J5VXJsIC1sZWFmKSB0YWc6ICRUYWcgaW50byAkRGVzdGluYXRpb24u
Li4iCiAgICBnaXRDbG9uZVRhZyAkVGFnICRSZXBvc2l0b3J5VXJsICREZXN0aW5hdGlvbgogICAgZ2l0
R2V0SGVhZFJldmlzaW9uTmFtZSAkRGVzdGluYXRpb24gfCBsb2dWZXJib3NlCiAgICBsb2dWZXJib3Nl
ICIiCn0KCmZ1bmN0aW9uIGdldExhdGVzdENvbG9yU2NoZW1lVW5pdFRhZyB7CiAgICBwYXJhbShbc3Ry
aW5nXSRUYWcsIFtzdHJpbmddJFVybFRvQ29sb3JTY2hlbWVVbml0KQogICAgaWYgKFtzdHJpbmddOjpJ
c051bGxPckVtcHR5KCRUYWcpKSB7IGdpdEZldGNoTGF0ZXN0VGFnRnJvbVJlcG9zaXRvcnkgJFVybFRv
Q29sb3JTY2hlbWVVbml0IH0KICAgIGVsc2UgeyAkVGFnIH0KfQoKZnVuY3Rpb24gZW5zdXJlQ3JlYXRl
RGlyZWN0b3J5SnVuY3Rpb24gewogICAgcGFyYW0oW3N0cmluZ10kTGluaywgW3N0cmluZ10kVGFyZ2V0
KQogICAgY21kLmV4ZSAvYyBta2xpbmsgL0ogIiRMaW5rIiAiJFRhcmdldCIKICAgIGlmICgkTEFTVEVY
SVRDT0RFIC1uZSAwKSB7IHRocm93ICJjb3VsZCBub3QgY3JlYXRlIGRpcmVjdG9yeSBqdW5jdGlvbiBh
dCAkTGluayB0byAkVGFyZ2V0IiB9Cn0KCmZ1bmN0aW9uIGVuc3VyZVZhbHVlIHsKICAgIHBhcmFtKCRW
YWx1ZSwgW3N0cmluZ10kUGF0dGVybj0nXi4qJCcsIFtzdHJpbmddJE1lc3NhZ2U9JG51bGwpCiAgICBp
ZigoJFZhbHVlIC1lcSAkbnVsbCkgLW9yICgkVmFsdWUgLW5vdG1hdGNoICRQYXR0ZXJuKSkgewogICAg
ICAgIHRocm93IChlaXRoZXJPciAkTWVzc2FnZSAidmFsdWUgaXMgbnVsbCBvciB1bmV4cGVjdGVkIChl
eHBlY3RlZCBtYXRjaDogJFBhdHRlcm47IGdvdDogJFZhbHVlKSIpCiAgICB9CiAgICAkVmFsdWUKfQoK
ZnVuY3Rpb24gcGF0aEV4aXN0cyB7CiAgICBwYXJhbShbc3RyaW5nXSRQYXRoLCBbc3dpdGNoXSROZWdh
dGU9JEZhbHNlKQogICAgaWYgKCEkTmVnYXRlKSB7IHRlc3QtcGF0aCAkUGF0aCB9IGVsc2UgeyAhKHRl
c3QtcGF0aCAkUGF0aCkgfQp9CgpmdW5jdGlvbiBpbnN0YWxsUGFja2FnZUZvclN1YmxpbWVUZXh0VmVy
c2lvbjNJZk5vdFByZXNlbnQgewogICAgcGFyYW0oW3N0cmluZ10kUGF0aCwgW3N0cmluZ10kUHJlZmVy
cmVkVGFnLCBbc3RyaW5nXSRSZXBvc2l0b3J5VXJsKQogICAgaWYgKCRJc1N1YmxpbWVUZXh0VmVyc2lv
bjMgLWFuZCAocGF0aEV4aXN0cyAtTmVnYXRlICRQYXRoKSkgewogICAgICAgIGNsb25lUmVwb3NpdG9y
eVRhZyAkUHJlZmVycmVkVGFnICRSZXBvc2l0b3J5VXJsICRQYXRoCiAgICB9Cn0=',
'ci.ps1@@@W0NtZGxldEJpbmRpbmcoKV0KcGFyYW0oCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICR
mYWxzZSwgUG9zaXRpb24gPSAwKV0KICAgIFtzdHJpbmddJGNvbW1hbmQsCiAgICBbUGFyYW1ldGVyKE1
hbmRhdG9yeSA9ICRmYWxzZSldCiAgICBbc3dpdGNoXSAkY292ZXJhZ2UKKQoKIyBUT0RPOiBCb290c3R
yYXAgdGhlIGJvb3RzdHJhcHBlci4gU2VlIGFwcHZleW9yLnBzMS4KJGdsb2JhbDpVbml0VGVzdGluZ1B
vd2VyU2hlbGxTY3JpcHRzRGlyZWN0b3J5ID0gJGVudjpURU1QCgouICRVbml0VGVzdGluZ1Bvd2VyU2h
lbGxTY3JpcHRzRGlyZWN0b3J5XGNpX2NvbmZpZy5wczEKLiAkVW5pdFRlc3RpbmdQb3dlclNoZWxsU2N
yaXB0c0RpcmVjdG9yeVx1dGlscy5wczEKCmZ1bmN0aW9uIEJvb3RzdHJhcCB7CiAgICBbQ21kbGV0Qml
uZGluZygpXQogICAgcGFyYW0oW3N3aXRjaF0gJHdpdGhfY29sb3Jfc2NoZW1lX3VuaXQpCiAgICAKICA
gIGVuc3VyZUNyZWF0ZURpcmVjdG9yeSAkU3VibGltZVRleHRQYWNrYWdlc0RpcmVjdG9yeQoKICAgICM
gQ29weSBwbHVnaW4gZmlsZXMgdG8gUGFja2FnZXMvPFBhY2thZ2U+IGZvbGRlci4KICAgIGlmICgkUGF
ja2FnZVVuZGVyVGVzdE5hbWUgLWVxICRTeW1ib2xDb3B5QWxsKXsKICAgICAgICBsb2dWZXJib3NlICJ
jcmVhdGluZyBkaXJlY3RvcnkgZm9yIHBhY2thZ2UgdW5kZXIgdGVzdCBhdCAkUGFja2FnZVVuZGVyVGV
zdFN1YmxpbWVUZXh0UGFja2FnZXNEaXJlY3RvcnkuLi4iCiAgICAgICAgZW5zdXJlQ3JlYXRlRGlyZWN
0b3J5ICRQYWNrYWdlVW5kZXJUZXN0U3VibGltZVRleHRQYWNrYWdlc0RpcmVjdG9yeQogICAgICAgIGx
vZ1ZlcmJvc2UgImNvcHlpbmcgY3VycmVudCBkaXJlY3RvcnkgY29udGVudHMgdG8gJFBhY2thZ2VVbmR
lclRlc3RTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5Li4uIgogICAgICAgICMgVE9ETzogY3JlYXR
lIGp1bmN0aW9ucyBmb3IgYWxsIHBhY2thZ2VzLgogICAgICAgIGVuc3VyZUNvcHlEaXJlY3RvcnlDb25
0ZW50cyAuICRTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5CiAgICB9IGVsc2UgewogICAgICAgIGx
vZ1ZlcmJvc2UgImNyZWF0aW5nIGRpcmVjdG9yeSBqdW5jdGlvbiB0byBwYWNrYWdlIHVuZGVyIHRlc3Q
gYXQgJFBhY2thZ2VVbmRlclRlc3RTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5Li4uIgogICAgICA
gIGVuc3VyZUNyZWF0ZURpcmVjdG9yeUp1bmN0aW9uICRQYWNrYWdlVW5kZXJUZXN0U3VibGltZVRleHR
QYWNrYWdlc0RpcmVjdG9yeSAuCiAgICB9CgogICAgIyBDbG9uZSBVbml0VGVzdGluZyBpbnRvIFBhY2t
hZ2VzL1VuaXRUZXN0aW5nLgogICAgaWYgKHBhdGhFeGlzdHMgLU5lZ2F0ZSAkVW5pdFRlc3RpbmdTdWJ
saW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5KSB7CiAgICAgICAgJFVOSVRURVNUSU5HX1RBRyA9IGdldEx
hdGVzdFVuaXRUZXN0aW5nQnVpbGRUYWcgJGVudjpVTklUVEVTVElOR19UQUcgJFN1YmxpbWVUZXh0VmV
yc2lvbiAkVW5pdFRlc3RpbmdSZXBvc2l0b3J5VXJsCiAgICAgICAgbG9nVmVyYm9zZSAiZG93bmxvYWQ
gVW5pdFRlc3RpbmcgdGFnOiAkVU5JVFRFU1RJTkdfVEFHIgogICAgICAgIGdpdENsb25lVGFnICRVTkl
UVEVTVElOR19UQUcgVW5pdFRlc3RpbmdSZXBvc2l0b3J5VXJsICRVbml0VGVzdGluZ1N1YmxpbWVUZXh
0UGFja2FnZXNEaXJlY3RvcnkKICAgICAgICBnaXRHZXRIZWFkUmV2aXNpb25OYW1lICRVbml0VGVzdGl
uZ1N1YmxpbWVUZXh0UGFja2FnZXNEaXJlY3RvcnkgfCBsb2dWZXJib3NlCiAgICAgICAgbG9nVmVyYm9
zZSAiIgogICAgfQoKICAgICMgQ2xvbmUgY292ZXJhZ2UgcGx1Z2luIGludG8gUGFja2FnZXMvY292ZXJ
hZ2UuCiAgICBpbnN0YWxsUGFja2FnZUZvclN1YmxpbWVUZXh0VmVyc2lvbjNJZk5vdFByZXNlbnQgJEN
vdmVyYWdlU3VibGltZVRleHRQYWNrYWdlc0RpcmVjdG9yeSAkZW52OkNPVkVSQUdFX1RBRyAkQ292ZXJ
hZ2VSZXBvc2l0b3J5VXJsCgogICAgJiAiJFVuaXRUZXN0aW5nU3VibGltZVRleHRQYWNrYWdlc0RpcmV
jdG9yeVxzYmluXGluc3RhbGxfc3VibGltZV90ZXh0LnBzMSIgLXZlcmJvc2UKfQoKZnVuY3Rpb24gSW5
zdGFsbFBhY2thZ2VDb250cm9sIHsKICAgIHJlbW92ZS1pdGVtICRDb3ZlcmFnZVN1YmxpbWVUZXh0UGF
ja2FnZXNEaXJlY3RvcnkgLUZvcmNlIC1SZWN1cnNlCiAgICAmICIkVW5pdFRlc3RpbmdTdWJsaW1lVGV
4dFBhY2thZ2VzRGlyZWN0b3J5XHNiaW5caW5zdGFsbF9wYWNrYWdlX2NvbnRyb2wucHMxIiAtdmVyYm9
zZQp9CgpmdW5jdGlvbiBJbnN0YWxsQ29sb3JTY2hlbWVVbml0IHsKICAgIGluc3RhbGxQYWNrYWdlRm9
yU3VibGltZVRleHRWZXJzaW9uM0lmTm90UHJlc2VudCAkQ29sb3JTY2hlbWVVbml0U3VibGltZVRleHR
QYWNrYWdlc0RpcmVjdG9yeSAkZW52OkNPTE9SX1NDSEVNRV9VTklUX1RBRyAkQ29sb3JTY2hlbWVVbml
0UmVwb3NpdG9yeVVybAp9CgpmdW5jdGlvbiBJbnN0YWxsS2V5cHJlc3MgewogICAgaW5zdGFsbFBhY2t
hZ2VGb3JTdWJsaW1lVGV4dFZlcnNpb24zSWZOb3RQcmVzZW50ICRLZXlQcmVzc1N1YmxpbWVUZXh0UGF
ja2FnZXNEaXJlY3RvcnkgJGVudjpLRVlQUkVTU19UQUcgJEtleVByZXNzUmVwb3NpdG9yeVVybAp9Cgp
mdW5jdGlvbiBSdW5UZXN0cyB7CiAgICBbQ21kbGV0QmluZGluZygpXQogICAgcGFyYW0oCiAgICAgICA
gW3N3aXRjaF0gJHN5bnRheF90ZXN0LAogICAgICAgIFtzd2l0Y2hdICRjb2xvcl9zY2hlbWVfdGVzdCw
KICAgICAgICBbc3dpdGNoXSAkY292ZXJhZ2UKICAgICkKCiAgICBpZiAoJHN5bnRheF90ZXN0KSB7CiA
gICAgICAgJiAiJFVuaXRUZXN0aW5nU3VibGltZVRleHRQYWNrYWdlc0RpcmVjdG9yeVxzYmluXHJ1bl9
0ZXN0cy5wczEiICIkZW52OlBBQ0tBR0UiIC12ZXJib3NlIC1zeW50YXhfdGVzdAogICAgfSBlbHNlaWY
gKCRjb2xvcl9zY2hlbWVfdGVzdCkgewogICAgICAgICYgIiRVbml0VGVzdGluZ1N1YmxpbWVUZXh0UGF
ja2FnZXNEaXJlY3Rvcnlcc2JpblxydW5fdGVzdHMucHMxIiAiJGVudjpQQUNLQUdFIiAtdmVyYm9zZSA
tY29sb3Jfc2NoZW1lX3Rlc3QKICAgIH0gZWxzZWlmICgkY292ZXJhZ2UpIHsKICAgICAgICAmICIkVW5
pdFRlc3RpbmdTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5XHNiaW5ccnVuX3Rlc3RzLnBzMSIgIiR
lbnY6UEFDS0FHRSIgLXZlcmJvc2UgLWNvdmVyYWdlCiAgICB9IGVsc2UgewogICAgICAgICYgIiRVbml
0VGVzdGluZ1N1YmxpbWVUZXh0UGFja2FnZXNEaXJlY3Rvcnlcc2JpblxydW5fdGVzdHMucHMxIiAiJGV
udjpQQUNLQUdFIiAtdmVyYm9zZQogICAgfQoKICAgIHN0b3AtcHJvY2VzcyAtZm9yY2UgLXByb2Nlc3N
uYW1lIHN1YmxpbWVfdGV4dCAtZWEgc2lsZW50bHljb250aW51ZQogICAgc3RhcnQtc2xlZXAgLXNlY29
uZHMgMgp9Cgp0cnl7CiAgICBzd2l0Y2ggKCRjb21tYW5kKXsKICAgICAgICAnYm9vdHN0cmFwJyB7IEJ
vb3RzdHJhcCB9CiAgICAgICAgJ2luc3RhbGxfcGFja2FnZV9jb250cm9sJyB7IEluc3RhbGxQYWNrYWd
lQ29udHJvbCB9CiAgICAgICAgJ2luc3RhbGxfY29sb3Jfc2NoZW1lX3VuaXQnIHsgSW5zdGFsbENvbG9
yU2NoZW1lVW5pdCB9CiAgICAgICAgJ2luc3RhbGxfa2V5cHJlc3NzJyB7IEluc3RhbGxLZXlwcmVzcyB
9CiAgICAgICAgJ3J1bl90ZXN0cycgeyBSdW5UZXN0cyAtY292ZXJhZ2U6JGNvdmVyYWdlIH0KICAgICA
gICAncnVuX3N5bnRheF90ZXN0cycgeyBSdW5UZXN0cyAtc3ludGF4X3Rlc3R9CiAgICAgICAgJ3J1bl9
jb2xvcl9zY2hlbWVfdGVzdHMnIHsgUnVuVGVzdHMgLWNvbG9yX3NjaGVtZV90ZXN0fQogICAgfQp9Y2F
0Y2ggewogICAgdGhyb3cgJF8KfQ==',
'ci_config.ps1@@@LiAkUFNTY3JpcHRSb290XHV0aWxzLnBzMQoKIyBXZSBtdXN0IHNldCBjb25zdGFu
dHMgb25seSBvbmNlLgppZiAoISRlbnY6VU5JVFRFU1RJTkdfQk9PVFNUUkFQUEVEKSB7CiAgICBmdW5j
dGlvbiBsb2NhbDptYWtlR2xvYmFsQ29uc3RhbnQgewogICAgICAgIHBhcmFtKFtzdHJpbmddJE5hbWUs
ICRWYWx1ZSkKICAgICAgICBuZXctdmFyaWFibGUgLW5hbWUgJE5hbWUgLXZhbHVlICRWYWx1ZSAtb3B0
aW9uIGNvbnN0YW50IC1zY29wZSBnbG9iYWwKICAgIH0KCiAgICBsb2dWZXJib3NlICJzZXR0aW5nIGds
b2JhbCBjb25zdGFudHMgYW5kIHZhcmlhYmxlcy4uLiIKCiAgICAjIFRPRE86IElmIHdlIHVzZWQgZGly
ZWN0b3J5IGp1bmN0aW9ucyBoZXJlIHRvbywgd2Ugd291bGRuJ3QgbmVlZCB0aGlzPwogICAgIyBUaGlz
IGNvbnN0YW50IG1lYW5zIHRoYXQgdGhlIGVudGlyZSBjb250ZW50cyBvZiB0aGUgc291cmNlIGRpcmVj
dG9yeSBtdXN0IGJlIGNvcGllZCB0byB0aGUgdGFyZ2V0IGRpcmVjdG9yeS4KICAgIG1ha2VHbG9iYWxD
b25zdGFudCBTeW1ib2xDb3B5QWxsICdfX2FsbF9fJwoKICAgIG1ha2VHbG9iYWxDb25zdGFudCBTdWJs
aW1lVGV4dFZlcnNpb24gKGVuc3VyZVZhbHVlICRlbnY6U1VCTElNRV9URVhUX1ZFUlNJT04gJ14yfDMk
JyAtbWVzc2FnZSAidGhlIGVudmlyb25tZW50IHZhcmlhYmxlIFNVQkxJTUVfVEVYVF9WRVJTSU9OIG11
c3QgYmUgc2V0IHRvICcyJyBvciAnMyciKQogICAgbWFrZUdsb2JhbENvbnN0YW50IElzU3VibGltZVRl
eHRWZXJzaW9uMyAoJFN1YmxpbWVUZXh0VmVyc2lvbiAtZXEgMykKICAgIG1ha2VHbG9iYWxDb25zdGFu
dCBJc1N1YmxpbWVUZXh0VmVyc2lvbjIgKCRTdWJsaW1lVGV4dFZlcnNpb24gLWVxIDIpCiAgICBtYWtl
R2xvYmFsQ29uc3RhbnQgU3VibGltZVRleHREaXJlY3RvcnkgKGVpdGhlck9yICRlbnY6U1VCTElNRV9U
RVhUX0RJUkVDVE9SWSAiQzpcc3QiKQogICAgbWFrZUdsb2JhbENvbnN0YW50IFN1YmxpbWVUZXh0RXhl
Y3V0YWJsZUhlbHBlclBhdGggKGpvaW4tcGF0aCAkU3VibGltZVRleHREaXJlY3RvcnkgJ3N1YmwuZXhl
JykKICAgIG1ha2VHbG9iYWxDb25zdGFudCBTdWJsaW1lVGV4dEV4ZWN1dGFibGVQYXRoIChqb2luLXBh
dGggJFN1YmxpbWVUZXh0RGlyZWN0b3J5ICdzdWJsaW1lX3RleHQuZXhlJykKICAgIG1ha2VHbG9iYWxD
b25zdGFudCBTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5IChlaXRoZXJPciAkZW52OlNVQkxJTUVf
VEVYVF9QQUNLQUdFU19ESVJFQ1RPUlkgIkM6XHN0XERhdGFcUGFja2FnZXMiKQogICAgIyBUT0RPOiBG
b3IgY29tcGF0aWJpbGl0eTsgcmVtb3ZlIHdoZW4gbm90IHVzZWQgYW55bW9yZS4KICAgICRnbG9iYWw6
U1RQID0gJFN1YmxpbWVUZXh0UGFja2FnZXNEaXJlY3RvcnkKCiAgICBtYWtlR2xvYmFsQ29uc3RhbnQg
UGFja2FnZVVuZGVyVGVzdE5hbWUgKGVuc3VyZVZhbHVlIChlaXRoZXJPciAkZW52OlVOSVRURVNUSU5H
X1BBQ0tBR0VfVU5ERVJfVEVTVF9OQU1FICRlbnY6UEFDS0FHRSkgLW1lc3NhZ2UgInRoZSBlbnZpcm9u
bWVudCB2YXJpYWJsZSBVTklUVEVTVElOR19QQUNLQUdFX1VOREVSX1RFU1RfTkFNRSAob3IgYWx0ZXJu
YXRpdmVseSwgUEFDS0FHRSkgaXMgbm90IHNldCIpCiAgICAjIFRPRE86IEZvciBjb21wYXRpYmlsaXR5
OyByZW1vdmUgd2hlbiBub3QgdXNlZCBhbnltb3JlLgogICAgbWFrZUdsb2JhbENvbnN0YW50IFBhY2th
Z2VOYW1lICRQYWNrYWdlVW5kZXJUZXN0TmFtZQogICAgbWFrZUdsb2JhbENvbnN0YW50IFBhY2thZ2VV
bmRlclRlc3RTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5IChqb2luLXBhdGggJFN1YmxpbWVUZXh0
UGFja2FnZXNEaXJlY3RvcnkgJFBhY2thZ2VVbmRlclRlc3ROYW1lKQoKICAgIG1ha2VHbG9iYWxDb25z
dGFudCBDb2xvclNjaGVtZVVuaXRSZXBvc2l0b3J5VXJsICJodHRwczovL2dpdGh1Yi5jb20vZ2VyYXJk
cm9jaGUvc3VibGltZS1jb2xvci1zY2hlbWUtdW5pdCIKICAgIG1ha2VHbG9iYWxDb25zdGFudCBDb2xv
clNjaGVtZVVuaXRTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5IChqb2luLXBhdGggJFN1YmxpbWVU
ZXh0UGFja2FnZXNEaXJlY3RvcnkgJ0NvbG9yU2NoZW1lVW5pdCcpCiAgICBtYWtlR2xvYmFsQ29uc3Rh
bnQgQ292ZXJhZ2VSZXBvc2l0b3J5VXJsICJodHRwczovL2dpdGh1Yi5jb20vY29kZXhucy9zdWJsaW1l
LWNvdmVyYWdlIgogICAgbWFrZUdsb2JhbENvbnN0YW50IENvdmVyYWdlU3VibGltZVRleHRQYWNrYWdl
c0RpcmVjdG9yeSAoam9pbi1wYXRoICRTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5ICdjb3ZlcmFn
ZScpCiAgICBtYWtlR2xvYmFsQ29uc3RhbnQgS2V5UHJlc3NSZXBvc2l0b3J5VXJsICJodHRwczovL2dp
dGh1Yi5jb20vcmFuZHkzay9LZXlwcmVzcyIKICAgIG1ha2VHbG9iYWxDb25zdGFudCBLZXlQcmVzc1N1
YmxpbWVUZXh0UGFja2FnZXNEaXJlY3RvcnkgKGpvaW4tcGF0aCAkU3VibGltZVRleHRQYWNrYWdlc0Rp
cmVjdG9yeSAnS2V5cHJlc3MnKQogICAgbWFrZUdsb2JhbENvbnN0YW50IFVuaXRUZXN0aW5nUmVwb3Np
dG9yeVVybCAiaHR0cHM6Ly9naXRodWIuY29tL3JhbmR5M2svVW5pdFRlc3RpbmciCiAgICBtYWtlR2xv
YmFsQ29uc3RhbnQgVW5pdFRlc3RpbmdTdWJsaW1lVGV4dFBhY2thZ2VzRGlyZWN0b3J5IChqb2luLXBh
dGggJFN1YmxpbWVUZXh0UGFja2FnZXNEaXJlY3RvcnkgJ1VuaXRUZXN0aW5nJykKCiAgICAjIFRPRE86
IElzIHRoaXMgc3BlY2lmaWMgdG8gdGhlIENJIHNlcnZpY2U/CiAgICAjIFN1cHJlc3Mgc29tZSBnaXQg
d2FybmluZ3MKICAgIGdpdCBjb25maWcgLS1nbG9iYWwgYWR2aWNlLmRldGFjaGVkSGVhZCBmYWxzZQp9'
)

    filter local:convertFromBase64String {
        param([string]$Content)
        $theContent = if ($_) { $_ } else { $Content }
        $utf8.GetString([System.Convert]::FromBase64String($theContent))
    }

    function local:createTextFile {
        param([string]$Destination, [string]$Content)
        if (![System.IO.Path]::IsPathRooted($Destination)) {
            throw "absolute path expected, got: $Destination"
        }
        if (test-path $Destination) {
            throw "cannot write file $Destination if it already exists"
        }
        [System.IO.File]::WriteAllText($Destination, $Content, $utf8)
    }

    filter local:unpackFile {
        param($Content)
        $theContent = if ($_) { $_ } else { $Content }
        # de-prettify and split
        $elements = @(($theContent -replace '\n','') -split '@@@')
        for ($i = 0; $i -lt $elements.length; $i = $i + 2) {
            createTextFile (join-path (convert-path .) $elements[$i]) ($elements[$i+1] | convertFromBase64String) -force
        }
    }

    push-location $UnitTestingPowerShellScriptsDirectory
        $encodedDependencies | unpackFile
    pop-location

    try {
        . $UnitTestingPowerShellScriptsDirectory\ci_config.ps1
    } catch [Exception]{
        # We dont't have access to  utils.ps1 yet. Use plain PS.
        write-error "$($error[0])"
        exit 1
    }

    $env:UNITTESTING_BOOTSTRAPPED = 1
}

# Dependencies are now available to this script.
. $UnitTestingPowerShellScriptsDirectory\utils.ps1

# logWarning "the appveyor.ps1 script is deprecated; use ci.ps1 instead"

& $UnitTestingPowerShellScriptsDirectory\ci.ps1 @PSBoundParameters
